
.section .text
.global main

//addi t0,zero,4
//addi t1,zero,6
//add t2,t0,t1
//sub t2,t2,t1
//addi t2,t2,-3


//addi t0,zero,2
//addi t1,zero,-3
//
//slt t2,t0,t1
//
//sltu t2,t0,t1
//slti t2,t0,1
//
//sltiu t2,t0,-2


//1a.1
//li t0,0xFFFFFFFF


//1a.3a
//li t1,0x7bcdef12
//li t2,0x76543219
//add t0,t1,t2
//slt t4,t0,t1
//slti t3,t2,0
//bne t3,t4,overflow
//ret;
//
//overflow:
//nop


//1a.3b
//main:
//li t4,0x8bcdef12
//li t5,0xa6543219
//add t0,t4,t5
//ret;



//2a.1
//la t0,0x84000000
//li t0,0x123
//sw t0,0x56(t0)
//ret;



//2a.2
//main:
//la t0,0x12345ff
//la t1,0x8
//and t2,t1,t0
//srli t2,t2,3


//2a.3
//mul:
//li a2,0x0
//loop:
//add a2,a2,a0
//addi a1,a1,-1
//bne a1,zero,loop
//ret
//main:
//li a0,0x3
//li a1,0x4
//jal mul
//ret

//3a.1
/*
main:
la t0,0xfaaa
la t1,0x1
slli t1,t1,0xc          //masking the 12th bit
or t3,t1,t0             //set
not t4,t1               //to get the previous bits
and t2,t4,t0            //for clearing the desired bit
ret;
*/


//3a.2
main:
la t0,0x1010101
la t1,0x1
slli t1,t1,0x16
or t2,t1,t0
not t3,t1
//or t4,t1,t0
xor t4,t1,t0
and t5,t1,t0
ret;






